@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
<div>
    <ul class="navbar-nav">
        @if (SignInManager.IsSignedIn(User))
        {
            <div class="dropdown">
                <button class="btn border border-white dropdown-toggle" id="dropdown" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                    Profile
                </button>
                <ul class="dropdown-menu">
                    <li>
                        <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"><i class="bi bi-person-square"></i> &nbsp;@UserManager.GetUserName(User)</a>
                    </li>
                    <li>
                        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                            <button id="logout" type="submit" class="nav-link btn btn-link text-dark"><i class="bi bi-box-arrow-right"></i> &nbsp;Logout</button>
                        </form>
                    </li>
                </ul>
            </div>
        }
        else
        {
            <li class="nav-item">
                <a class="nav-link text-light" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-light" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
            </li>
        }
    </ul>
</div>